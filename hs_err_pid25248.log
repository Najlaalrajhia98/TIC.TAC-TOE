#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 99856 bytes for Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:184), pid=25248, tid=25000
#
# JRE version: Java(TM) SE Runtime Environment (19.0.1+10) (build 19.0.1+10-21)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (19.0.1+10-21, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF-8 -XX:+ShowCodeDetailsInExceptionMessages TICTAC

Host: 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz, 8 cores, 7G,  Windows 10 , 64 bit Build 19041 (10.0.19041.2251)
Time: Wed Dec 14 13:27:00 2022 Arabian Standard Time elapsed time: 0.373648 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x000002a5e4943130):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=25000, stack(0x000000b131f00000,0x000000b132000000)]


Current CompileTask:
C2:    373  159       4       java.util.regex.Matcher::search (154 bytes)

Stack: [0x000000b131f00000,0x000000b132000000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6ee8fa]